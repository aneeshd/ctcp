#!/usr/bin/python
import sys
import os
import matplotlib.pyplot as plt
import math

def graph(log_file):

    times      = []
    instant_BW = []
    average_BW = []
    blockno    = []
    snd_cwnd   = []
    slr        = []
    srtt       = []
    rto        = []

    current = 0.1
    mss     = 1398
    res     = 0.2
    abw     = 0
    bw      = 0

    f = open(log_file, 'r')
    for line in f:
        values = line.split(" ")

        if values[-1] == "xmt\n":
            # The variable values is a list of the form
            # [time, blockno, snd_cwnd, slr, rtt, srtt, rto, xmt]

            # Compute instant and avg bw

            abw += mss
            bw  += mss

            time = float(values[0])

            if time > current and time <= (current + res):
                times.append(time)

                instant_BW.append(8e-6*bw/res)
                average_BW.append(8e-6*1.0*abw/current)

                blockno.append(values[1])
                snd_cwnd.append(values[2])
                slr.append(values[3])
                srtt.append(values[4])
                rto.append(values[5])


                current = res + current
                bw = 0
            elif time > (current + res):
                zero_point = res*math.floor(time/res)
                times.append(current)
                times.append(zero_point)

                instant_BW.append(0)
                instant_BW.append(0)

                average_BW.append(8e-6*1.0*abw/current)
                average_BW.append(8e-6*1.0*abw/zero_point)

                blockno.append(values[1])
                snd_cwnd.append(values[2])
                slr.append(values[3])
                srtt.append(values[4])
                rto.append(values[5])

		current = zero_point + res
		bw = 0

#   print average_BW
    plt.plot(times, instant_BW, 'r--', times, average_BW, 'g--', times, snd_cwnd, 'b*')
    plt.xlabel('time')
    plt.ylabel('Mbs')
    if not os.path.exists('figs'):
        os.mkdirs('figs')
    plt.savefig('figs/' + log_file[5:-4] + '.pdf')

def main(args):
    graph(args[0])


if __name__ == '__main__':
    if len(sys.argv) < 2:
        sys.exit("Usage: ./scripts/grapher <ctcpsrv_output>")
    main(sys.argv[1:])

